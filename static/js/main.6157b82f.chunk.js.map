{"version":3,"sources":["components/card_home.jsx","services/pokeApi.js","components/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card_Home","props","useState","show","setShow","handleClose","Card","className","Img","variant","src","pokemon","sprites","front_default","Body","Title","name","types","map","h","Badge","type","Button","onClick","Modal","onHide","animation","Header","closeButton","height","weight","stats","stat","base_stat","Footer","API_URL","get_pokemon_detail","a","axios","get","response","data","get_number_pokemon","count","Home","setPokemon","filtered_pokemon","setFilteredPokemon","pages","set_pages","fetch_pokemon","page","length","pop","i","concat","event","calculate_pages","total","console","log","Math","ceil","useEffect","Container","fluid","Row","Form","inline","Group","controlId","Control","onChange","result","value","target","toLowerCase","filter","search","placeholder","Col","id","Pagination","color","defaultCurrent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","rel","href","integrity","crossorigin","document","getElementById"],"mappings":"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","file":"static/js/main.6157b82f.chunk.js","sourcesContent":["\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport {useState} from 'react'\r\nimport '../css/card.css'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n/**\r\n * Card component for showing a Pokemon\r\n */\r\nexport default function Card_Home(props){\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    return(\r\n        <>\r\n            <Card className='card-style'>\r\n                <Card.Img className=\"card-image\" variant=\"top\" src={props.pokemon.sprites.front_default} />\r\n                    <Card.Body>\r\n                        <Card.Title>{props.pokemon.name}</Card.Title>\r\n                        {props.pokemon.types.map( h =>{ return <Badge className={`card-badge-${h.type.name}` + \" card-badge\"}>{h.type.name}</Badge>})}\r\n                        \r\n                        <hr/>\r\n                        <Button className=\"card-button\" onClick={handleShow} variant=\"primary\">More Details</Button>\r\n                    </Card.Body>\r\n            </Card>\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.pokemon.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Height:</h5>\r\n                    <p>{props.pokemon.height}</p>\r\n                    <h5>Weight:</h5>\r\n                    <p>{props.pokemon.weight}</p>\r\n                    {props.pokemon.stats.map( h => {\r\n                        return (\r\n                        <>\r\n                        <h5>{h.stat.name}:</h5>\r\n                        <p>{h.base_stat}</p>\r\n                        </>)\r\n                    })}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button className=\"card-button\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n)\r\n}","import axios from 'axios'\r\n\r\nconst API_URL = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\nexport async function get_pokemon_detail(name){\r\n    let response = await axios.get(API_URL+name)\r\n    return response.data\r\n}\r\nexport async function get_number_pokemon(){\r\n    let response = await axios.get(API_URL)\r\n    return response.data.count\r\n}","\r\nimport Card from './card_home'\r\nimport {useEffect, useState} from 'react'\r\nimport {get_pokemon_detail,get_number_pokemon} from '../services/pokeApi'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport '../css/home.css'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\n\r\n\r\n/**\r\n * Component used for the home page\r\n */\r\nexport default function Home(){\r\n\r\n    const[pokemon, setPokemon] = useState([])\r\n    const[filtered_pokemon, setFilteredPokemon] = useState([])\r\n    const[pages, set_pages] = useState([])\r\n\r\n    useEffect( async () =>{ \r\n        await fetch_pokemon()\r\n        await calculate_pages()\r\n    },[]) \r\n    /**\r\n     * \r\n     * @param {Number} page Page number to paginate Pokemon\r\n     */\r\n    async function fetch_pokemon(page = 1){\r\n        //Case when client wants to change page\r\n        if(page != 1){\r\n            //Arrays need to be empty\r\n            while(pokemon.length > 0) {\r\n                pokemon.pop()\r\n                filtered_pokemon.pop()\r\n            }\r\n            setPokemon(pokemon)\r\n            setFilteredPokemon(filtered_pokemon)\r\n            for(let i = (page-1)*10; i < 10*page; i++){\r\n                let data = await get_pokemon_detail(i)\r\n                setPokemon(pokemon => pokemon.concat(data))\r\n                setFilteredPokemon(pokemon => pokemon.concat(data))\r\n            }   \r\n        }\r\n        else{\r\n            //Empty the arrays if the client wants to return to page 1\r\n            while(pokemon.length > 0) {\r\n                pokemon.pop()\r\n                filtered_pokemon.pop()\r\n            }\r\n            setPokemon(pokemon)\r\n            setFilteredPokemon(filtered_pokemon)\r\n            for(let i = page; i <=10*page; i++){\r\n                let data = await get_pokemon_detail(i)\r\n                setPokemon(pokemon => pokemon.concat(data))\r\n                setFilteredPokemon(pokemon => pokemon.concat(data))\r\n            }   \r\n        }\r\n    } \r\n    /**\r\n     * Function to filter Pokemon\r\n     * @param {Event} event \r\n     */\r\n    function filter(event){\r\n        let value = event.target.value.toLowerCase();\r\n        let result = [];\r\n        result = pokemon.filter((pokemon) => {\r\n            return pokemon.name.search(value) != -1;\r\n            });\r\n        setFilteredPokemon(result);\r\n    }\r\n    /**\r\n     * Function to handle pagination\r\n     * @param {Event} event \r\n     * @param {Number} page Page to paginate \r\n     */\r\n    async function handle_pagination(event,page){\r\n        await fetch_pokemon(page)\r\n    }\r\n    /**\r\n     * Function to calculate the number of pages needed for pagination\r\n     */\r\n    async function calculate_pages(){\r\n        let total = await get_number_pokemon()\r\n        console.log(total)\r\n        set_pages(Math.ceil(total / 10))\r\n\r\n    }\r\n    return(\r\n    <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n            <Form className=\"form-style search-style\" inline={false}>\r\n                <Form.Group  controlId=\"formGroupSearch\">\r\n                        <Form.Control className=\"search-bar\" onChange={(event) => filter(event)} type=\"text\" placeholder=\"Search a pokemon\"></Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n        </Row>\r\n        <Row>\r\n                {filtered_pokemon.map(h =>{return <Col><Card pokemon={h} key= {h.id}/></Col>} )}\r\n        </Row>\r\n        <Row className=\"pagination\">\r\n            <Pagination\r\n                color=\"primary\"\r\n                defaultCurrent={1}\r\n                onChange={handle_pagination}\r\n                count={pages}\r\n            />\r\n        </Row>\r\n    </Container>\r\n)\r\n\r\n}","\nimport './App.css'\nimport Home from './components/home'\n\nfunction App() {\n  return (\n      <Home/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n        <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n      crossorigin=\"anonymous\"\n    />\n    <App />\n    <script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n    <script\n      src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"\n      crossorigin></script>\n\n    <script\n      src=\"https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js\"\n      crossorigin></script>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}